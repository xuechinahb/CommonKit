apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def config = rootProject.ext
def lib = rootProject.ext.libs

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        /**
         * ARouter
         */
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //设置分包的最大限制，防止出现过大导致应用无法编译的问题
    dexOptions {
        dexInProcess true
        javaMaxHeapSize "6g"
        preDexLibraries true
        jumboMode = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {

        mul_test {
            keyAlias 'test'
            storeFile file('keystore/test.jks')
            keyPassword 'yuyuji001'
            storePassword 'yuyuji001'
            v1SigningEnabled true
            v2SigningEnabled true
        }


    }

    productFlavors {
        flavorDimensions "default"

        mul_test {
            dimension "default"
            applicationId "com.ssf.im"
            versionCode 200
            versionName "2.0.0"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "gf"]
            signingConfig signingConfigs.mul_test
        }

    }

    buildTypes {
        debug {
            //启用混淆配置
            minifyEnabled false
            //Zip代码压缩优化
            zipAlignEnabled false
            //移除无用资源
            shrinkResources false
            //加载默认混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }

        release {
            //启用混淆配置
            minifyEnabled false
            //Zip代码压缩优化
            zipAlignEnabled false
            //移除无用资源
            shrinkResources false
            //加载默认混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
    }


    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation lib.SupportV7
    implementation lib.SupportCardView
    implementation lib.SupportDesign
    implementation lib.SupportRecyclerviewV7
    implementation lib.ConstraintLayout
    implementation 'com.android.support:multidex:1.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // ARouter
    implementation 'com.alibaba:arouter-api:1.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt 'com.alibaba:arouter-compiler:1.1.4'
    // lifecycle
    kapt "android.arch.lifecycle:compiler:1.1.1"
    // dagger
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    
    // mvvm
    compile project(path: ':Libs_MVVM')

}
